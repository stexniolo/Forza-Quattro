/*
 * This Java source file was generated by the Gradle 'init' task.
 */



package App;

import org.junit.Test;

import it.unicam.cs.pa.forza4.model.Coin;
import it.unicam.cs.pa.forza4.model.Field;
import it.unicam.cs.pa.forza4.model.GameField;
import it.unicam.cs.pa.forza4.model.InteractivePlayer;

import static org.junit.Assert.*;


public class AppTest {    
    @Test
	public void TestCreateField() {
		Field field = new GameField();
		assertTrue(field != null);
	}

	@Test
	public void TestInsertCoin() {
		GameField field = new GameField();
		Coin coin1 = Coin.PLAYER1;
		InteractivePlayer p1 = new InteractivePlayer(coin1,"Stefano");
		field.addChip(1, p1);
		assertTrue(field.getSlots()[6][0] == Coin.PLAYER1);		
	}
	
	@Test
	public void TestWinByColumns() {
		GameField field = new GameField();
		Coin coin1 = Coin.PLAYER1;
		InteractivePlayer p1 = new InteractivePlayer(coin1,"Stefano");
		field.addChip(1,p1);
		field.addChip(1, p1);
		field.addChip(1, p1);
		field.addChip(1, p1);
		assertTrue(field.existsWinner(coin1));
	}	
	
	@Test
	public void TestWinByRows() {
		GameField field = new GameField();
		Coin coin1 = Coin.PLAYER1;
		InteractivePlayer p1 = new InteractivePlayer(coin1,"Stefano");
		field.addChip(1,p1);
		field.addChip(2, p1);
		field.addChip(3, p1);
		field.addChip(4, p1);
		assertTrue(field.existsWinner(coin1));
	}
	
	@Test
	public void TestWinByNegativeDiagonal() {
		GameField field = new GameField();
		Coin coin1 = Coin.PLAYER1;
		InteractivePlayer p1 = new InteractivePlayer(coin1,"Stefano");
		field.addChip(1,p1);
		field.addChip(1, p1);
		field.addChip(1, p1);
		field.addChip(1, p1);
		field.addChip(2,p1);
		field.addChip(2, p1);
		field.addChip(2, p1);
		field.addChip(2, p1);
		field.addChip(3,p1);
		field.addChip(3, p1);
		field.addChip(4, p1);
		assertTrue(field.existsWinner(coin1));
	}
	
	@Test
	public void TestWinByPositiveDiagonal() {
		GameField field = new GameField();
		Coin coin1 = Coin.PLAYER1;
		InteractivePlayer p1 = new InteractivePlayer(coin1,"Stefano");
		field.addChip(1,p1);
		field.addChip(2, p1);
		field.addChip(2, p1);
		field.addChip(3, p1);
		field.addChip(3,p1);
		field.addChip(3, p1);
		field.addChip(4, p1);
		field.addChip(4, p1);
		field.addChip(4,p1);
		field.addChip(4, p1);
		assertTrue(field.existsWinner(coin1));
	}	
}


